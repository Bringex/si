#include <iostream>
#include <fstream>
#include <vector>
#include <string>
#include <algorithm>
#include <cstdlib>
#include <map>
#include <list>
//чтобы не подумали, что скатали - оставьте только нужные либы

using namespace std;

void heapify(int arr[], int n, int i) 
{ 
    int max = i; 
    int l = 2 * i + 1; 
    int r = 2 * i + 2;
  
    if (l < n && arr[l] > arr[max]) 
        max = l; 
  
    if (r < n && arr[r] > arr[max]) 
        max = r; 
  
    if (max != i) { 
        int tmp = arr[i];
        arr[i] = arr[max];
        arr[max] = tmp;
  
        heapify(arr, n, max); 
    }
} 
  
void heapSort(int arr[], int n) 
{ 
    for (int i = n / 2 - 1; i >= 0; i--) 
        heapify(arr, n, i); 
  
    for (int i = n - 1; i >= 0; i--) { 
        int tmp = arr[0];
        arr[0] = arr[i];
        arr[i] = tmp;
        heapify(arr, i, 0); 
    } 
} 
  

int main() {

    freopen("sort.in", "r", stdin);
    freopen("sort.out", "w", stdout);

    int n;
    cin >> n;
    int *arr = (int*)malloc(n * sizeof(int)); // тут у меня просто статический массив не создается. Если нет ошибки int arr[n], то лучше делать так. 
        
    for (int i = 0; i < n; i++)
        cin >> arr[i];

    heapSort(arr, n); 

    cout << arr[0];
    for (int i = 1; i < n; i++)
        cout << " " << arr[i];
    
    return 0;
}
