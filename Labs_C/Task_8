#include <stdio.h>
#include <math.h>
#include <malloc.h>

int len_str(char *str){
    int i = 0;
    while(str[++i] != '\0');
    return i;
}

char *strcat(char *str1, char *str2){ // 1
  
    int lenStr = len_str(str1) + len_str(str2);
    char *new_str = (char*)malloc(lenStr * sizeof(char));
    int counter, i = 0;
    
    for (i = 0; i < len_str(str1); i++)
        new_str[i] = str1[i];
    counter = i;
    for (i = 0; i < len_str(str2); i++)
        new_str[counter + i] = str2[i];

    new_str[counter + i] = '\0';
        
    return new_str;
}

char *strcpy(char *str1, char *str2){ // 5
  
    int lenStr = len_str(str1);
    char *new_str = (char*)malloc(lenStr * sizeof(char));
    for (int i = 0; i < lenStr; i++)
        if (str2[i] != '\0')
            new_str[i] = str2[i];
        else
            new_str[i] = '\0';

    return new_str;
}

int strncmp(char *str1, char *str2, size_t n){ // 4
    for (int i = 0; i < n; i++)
        if (str1[i] != '\0' && str2[i] != '\0')
            if (str1[i] == str2[i] && i == n - 1)
                return 0;
            else if (str1[i] != str2[i])
                return (int)((char)str1[i] - (char)str2[i]);
        else 
              return 0;
    return 0;
    
}

int strchr(char *str, int ch){ // 8
  char last = -1; 
  for (int i = 0; i < len_str(str); i++)
        if (str[i] == ch){
           last = i;
           break;
        }

  if ((int)(last) != -1)
     return last + 1;
  else 
     return 0;
}

int max_n_chars(char *str1, char *str2){
    size_t s1len = len_str(str1);
    size_t s2len = len_str(str2);
    int count = 0;
    int max = 0;
    for ( int i = 0; i < s1len; i++)
    {
        for (int j = 0; j < s2len; j++){
            if ( str1[i + j] == str2[j])
                count++;
            else
                break;
        }
        if (count > 0)
        {
            max = count;
            count = 0;
        }
    }
        
    return count;
}

int strpbrk(char *s1, char *s2) // 11
{
    size_t s1len = len_str(s1);
    size_t s2len = len_str(s2);
    
    int count = 0;
    int max = 0;

    for ( int i = 0; i < s1len; i++)
    {
        for (int j = 0; j < s2len; j++){
            if ( s1[i + j] == s2[j])
                count++;
            else
                break;
        }
        if (count > max)
           max = count;
        count = 0;
    }
        
      
    return max;
}


int main()
{
  //1,  4, 5, 8, 11

  char str1[20];
  char str2[20];
  scanf("%s", &str1);
  scanf("%s", &str2);
  printf("1: concat string: %s\n", strcat(str1, str2));
  printf("4: copy string: %s\n", strcpy(str1, str2));
  printf("5: compare: %d\n", strncmp(str1, str2, 5));
  printf("8: index: %d\n", strchr(str1, 'b'));
  printf("11: length: %d\n", strpbrk(str1, str2));

  return 0;
}
