#include <iostream>
#include <fstream>
#include <vector>
#include <string>
#include <algorithm>
#include <cstdlib>
#include <map>
#include <list>

using namespace std;

int getCharByK(string str, int k){
    return (int)str[str.length() - k - 1];
}
vector<string> radixSort(vector<string> arr, int n, int ks){
    int p = 1, index, temp, count = 0;
    int k = ks;
    int max = 130;
    vector<list<string>> blocks (max);
    
    for (int i = 0; i < k; i++){
        for (int j = 0; j < n; j++){
            int num = getCharByK(arr[j], i);
            blocks[num % max].push_back(arr[j]);
        }
        
        count = 0;
        for (int j = 0; j < max; j++){
            while (!blocks[j].empty())
            {
                arr[count] = *(blocks[j].begin());
                blocks[j].erase(blocks[j].begin());
                count++;
            }
        }
       
        
    }
    return arr;
}

int main() {

    freopen("radixsort.in", "r", stdin);
    freopen("radixsort.out", "w", stdout);

    int n, max, k;
    cin >> n >> max >> k;
    vector<string> arr (n);
    for (int i = 0; i < n; i++)
        cin >> arr[i];
    
    arr = radixSort(arr, n, k);
    for (int i = 0; i < n; i++)
        cout << arr[i] << "\n";
    return 0;
}
